{
	"info": {
		"_postman_id": "f2957883-84a6-4106-9385-f9a0e903b83a",
		"name": "Concerto prod (examples)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30146130"
	},
	"item": [
		{
			"name": "sso",
			"item": [
				{
					"name": "Token (local admin)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin@automation.local\",\n    \"password\": \"Password01\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{concerto_ip}}/auth/api/v1/token/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"auth",
								"api",
								"v1",
								"token",
								""
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "authorizations",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/authorizations/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"authorizations",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "api-f5",
			"item": [
				{
					"name": "assets",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/f5/assets/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"f5",
								"assets",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "nodes",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/f5/1/Common/nodes/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"f5",
								"1",
								"Common",
								"nodes",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "partitions",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/f5/1/partitions/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"f5",
								"1",
								"partitions",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "pools",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/f5/1/Partition1/pools/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"f5",
								"1",
								"Partition1",
								"pools",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "pool members",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/f5/1/Partition1/pool/POOLLAME/members/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"f5",
								"1",
								"Partition1",
								"pool",
								"POOLLAME",
								"members",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "pool member",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/f5/1/Common/pool/GPino_vs_pool/member/192.168.12.125:443/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"f5",
								"1",
								"Common",
								"pool",
								"GPino_vs_pool",
								"member",
								"192.168.12.125:443",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "pool member",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"state\": \"user-up\",\n        \"session\": \"user-disabled\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{concerto_ip}}/backend/f5/1/Common/pool/GPino_vs_pool/member/192.168.12.125:443/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"f5",
								"1",
								"Common",
								"pool",
								"GPino_vs_pool",
								"member",
								"192.168.12.125:443",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "pool member stats",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/f5/1/Common/pool/GPino_vs_pool/member/192.168.12.125:443/stats/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"f5",
								"1",
								"Common",
								"pool",
								"GPino_vs_pool",
								"member",
								"192.168.12.125:443",
								"stats",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "pools",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"name\": \"POOLNAME\",\n        \"monitor\": \"/Partition1/MONITOR\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{concerto_ip}}/backend/f5/1/Common/pools/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"f5",
								"1",
								"Common",
								"pools",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "api-vmware",
			"item": [
				{
					"name": "assets",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/assets/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"assets",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "assets",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": \n    {\n        \"address\": \"192.168.12.8\",\n        \"port\": null,\n        \"fqdn\": \"192.168.12.8\",\n        \"baseurl\": \"https://192.168.12.8/\",\n        \"tlsverify\": 0,\n        \"datacenter\": \"Milano\",\n        \"environment\": \"Developement\",\n        \"position\": \"RACK 1\",\n        \"api_type\": \"vmware\",\n        \"api_additional_data\": \"\",\n        \"username\": \"administrator@vsphere.local\",\n        \"password\": \"xxxxxxxxx\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/assets/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"assets",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "datacenters (quick)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/1/datacenters/?quick",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"1",
								"datacenters",
								""
							],
							"query": [
								{
									"key": "quick",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "clusters (quick)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/1/clusters/?quick",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"1",
								"clusters",
								""
							],
							"query": [
								{
									"key": "quick",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "hostsystems (quick)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/1/hostsystems/?quick",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"1",
								"hostsystems",
								""
							],
							"query": [
								{
									"key": "quick",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "datastores (quick)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/1/datastores/?quick",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"1",
								"datastores",
								""
							],
							"query": [
								{
									"key": "quick",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "vmFolders (tree)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/1/vmFolders/tree/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"1",
								"vmFolders",
								"tree",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "networks (quick)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/1/networks/?quick",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"1",
								"networks",
								""
							],
							"query": [
								{
									"key": "quick",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "templates (quick)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/1/templates/?quick",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"1",
								"templates",
								""
							],
							"query": [
								{
									"key": "quick",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "virtualmachines (quick)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/1/virtualmachines/?quick",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"1",
								"virtualmachines",
								""
							],
							"query": [
								{
									"key": "quick",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "virtualmachine",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/1/virtualmachine/vm-3230/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"1",
								"virtualmachine",
								"vm-3230",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "customSpecs (quick)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/1/customSpecs/?quick",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"1",
								"customSpecs",
								""
							],
							"query": [
								{
									"key": "quick",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "template",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"vmName\": \"TEST-TWO\",\n        \"datacenterMoId\": \"datacenter-2\",\n        \"clusterMoId\": \"domain-c1441\",\n        \"hostMoId\": \"host-1363\",\n        \"vmFolderMoId\": \"group-v2475\",\n        \"mainDatastoreMoId\": \"datastore-2341\",\n        \"powerOn\": true,\n        \"numCpu\": 4,\n        \"numCoresPerSocket\": 2,\n        \"memoryMB\": 2048,\n        \"notes\": \"TEST ONE ONE\",\n        \"networkDevices\": {\n            \"existent\": [\n                {\n                    \"networkMoId\": \"network-1213\",\n                    \"label\": \"Network adapter 1\",\n                    \"deviceType\": \"vmxnet3\"\n                }\n            ],\n            \"new\": [\n                {\n                    \"networkMoId\": \"network-1213\",\n                    \"label\": \"\",\n                    \"deviceType\": \"e1000e\"\n                }\n            ]\n        },\n        \"diskDevices\": {\n            \"existent\": [\n                {\n                    \"datastoreMoId\": \"datastore-2341\",\n                    \"label\": \"Hard disk 1\",\n                    \"sizeMB\": 25600,\n                    \"deviceType\": \"thin\"\n                }\n            ],\n            \"new\": [\n                {\n                    \"datastoreMoId\": \"datastore-1364\",\n                    \"label\": \"\",\n                    \"sizeMB\": 512,\n                    \"deviceType\": \"thick lazy zeroed\"\n                }\n            ]\n        },\n        \"guestSpec\": \"centos-test2\",\n        \"deleteGuestSpecAfterDeploy\": false,\n        \"secondStageIp\": \"192.168.18.217\",\n        \"bootstrapKeyId\": 1,\n        \"postDeployCommands\": [\n            {\n                \"command\": \"waitPowerOn\",\n                \"user_args\": {}\n            },\n            {\n                \"command\": \"resizeLastPartition\",\n                \"user_args\": {\n                    \"__diskDevice\": \"sda\"\n                }\n            },\n            {\n                \"command\": \"renameVg\",\n                \"user_args\": {\n                    \"__vgName\": \"paperoga\"\n                }\n            },\n            {\n                \"command\": \"reboot\",\n                \"user_args\": {}\n            },\n            {\n                \"command\": \"addMountPoint\",\n                \"user_args\": {\n                    \"__vgName\": \"paperoga\",\n                    \"__lvName\": \"var\",\n                    \"__lvSize\": 2,\n                    \"__filesystem\": \"ext4\",\n                    \"__mountFolder\": \"/var\"\n                }\n            },\n            {\n                \"command\": \"reboot\",\n                \"user_args\": {}\n            },\n            {\n                \"command\": \"addPubKey\",\n                \"user_args\": {\n                    \"__pubKeyId\": 1\n                }\n            },\n                        {\n                \"command\": \"removeBootstrapKey\",\n                \"user_args\": {}\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/1/template/vm-2441/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"1",
								"template",
								"vm-2441",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "template prod example",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"vmName\": \"TEST-TWO\",\n        \"datacenterMoId\": \"datacenter-2\",\n        \"clusterMoId\": \"domain-c1441\",\n        \"hostMoId\": \"host-1363\",\n        \"vmFolderMoId\": \"group-v2475\",\n        \"mainDatastoreMoId\": \"datastore-2341\",\n        \"powerOn\": true,\n        \"numCpu\": 4,\n        \"numCoresPerSocket\": 2,\n        \"memoryMB\": 2048,\n        \"notes\": \"TEST ONE ONE\",\n        \"networkDevices\": {\n            \"existent\": [\n                {\n                    \"networkMoId\": \"network-1213\",\n                    \"label\": \"Network adapter 1\",\n                    \"deviceType\": \"vmxnet3\"\n                }\n            ],\n            \"new\": [\n                {\n                    \"networkMoId\": \"dvportgroup-3223\",\n                    \"label\": \"\",\n                    \"deviceType\": \"vmxnet3\"\n                }\n            ]\n        },\n        \"diskDevices\": {\n            \"existent\": [\n                {\n                    \"datastoreMoId\": \"datastore-1365\",\n                    \"label\": \"Hard disk 1\",\n                    \"sizeMB\": 25600,\n                    \"deviceType\": \"thick eager zeroed\"\n                }\n            ],\n            \"new\": [\n                {\n                    \"datastoreMoId\": \"datastore-1364\",\n                    \"label\": \"\",\n                    \"sizeMB\": 512,\n                    \"deviceType\": \"thin\"\n                },\n                {\n                    \"datastoreMoId\": \"datastore-1364\",\n                    \"label\": \"\",\n                    \"sizeMB\": 512,\n                    \"deviceType\": \"thick lazy zeroed\"\n                }\n\n            ]\n        },\n        \"guestSpec\": \"ceee\",\n        \"deleteGuestSpecAfterDeploy\": false,\n        \"secondStageIp\": \"192.168.12.189\",\n        \"bootstrapKeyId\": 1,\n        \"postDeployCommands\": [\n            {\n                \"command\": \"waitPowerOn\",\n                \"user_args\": {}\n            },\n            {\n                \"command\": \"resizeLastPartition\",\n                \"user_args\": {\n                    \"__diskDevice\": \"sda\"\n                }\n            },\n            {\n                \"command\": \"renameVg\",\n                \"user_args\": {\n                    \"__vgName\": \"paperoga\"\n                }\n            },\n            {\n                \"command\": \"reboot\",\n                \"user_args\": {}\n            },\n            {\n                \"command\": \"addMountPoint\",\n                \"user_args\": {\n                    \"__vgName\": \"paperoga\",\n                    \"__lvName\": \"var\",\n                    \"__lvSize\": 2,\n                    \"__filesystem\": \"ext4\",\n                    \"__mountFolder\": \"/var\"\n                }\n            },\n            {\n                \"command\": \"reboot\",\n                \"user_args\": {}\n            },\n            {\n                \"command\": \"addPubKey\",\n                \"user_args\": {\n                    \"__pubKeyId\": 1\n                }\n            },\n            {\n                \"command\": \"removeBootstrapKey\",\n                \"user_args\": {}\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/1/template/vm-2441/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"1",
								"template",
								"vm-2441",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "bootstrapKeys",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/stage2/bootstrapkeys/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"stage2",
								"bootstrapkeys",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "bootstrapKeys",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"priv_key\": \"LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUJGd0FBQUFkemMyZ3RjbgpOaEFBQUFBd0VBQVFBQUFRRUEwL1AxU2IyVDd5OXQ4M0pYMi9PRGpxYjBjK1gzQThOUFdldDl1bDVQditGak5lRUt1TjNqCkJvUVdySktTNkpDQ2Y5V2VhUEhzWFBFSUgvdzdiNWFXbElvOG42TnJBaEdIMGRJS0txd3ZyRUF6UXlJeWsydTBWSG80bkUKa0RwK0NQK21CVEhFYjZrVkRCSTFWTG13N2NaWFpKNmhLc0tCRi9MNnFla2pGZmdZU3MxSEpVUGZuUkRQd3FsWUx6L2VhMgpmWDdvSzg4RVhGbUkxUjlwS0YrS3RHSWdjT1NKVkRVRklybk9jbGxHdU0rYlkrTUhQTDY4ZFVWa2hNOEdUWjdWQWNxZ3NRCmNrR0hEbkd2bHArK1BOQXZtTTI1bXRyZ2k3b3NVMkh6NnVUSmxVU0VFVkJtbisyU0o5TkkwUThBbnNhMTRPalUvNDRWSUgKNy9xWlpNdE1uUUFBQThpcU96eXlxanM4c2dBQUFBZHpjMmd0Y25OaEFBQUJBUURUOC9WSnZaUHZMMjN6Y2xmYjg0T09wdgpSejVmY0R3MDlaNjMyNlhrKy80V00xNFFxNDNlTUdoQmFza3BMb2tJSi8xWjVvOGV4YzhRZ2YvRHR2bHBhVWlqeWZvMnNDCkVZZlIwZ29xckMrc1FETkRJaktUYTdSVWVqaWNTUU9uNEkvNllGTWNSdnFSVU1FalZVdWJEdHhsZGtucUVxd29FWDh2cXAKNlNNVitCaEt6VWNsUTkrZEVNL0NxVmd2UDk1clo5ZnVncnp3UmNXWWpWSDJrb1g0cTBZaUJ3NUlsVU5RVWl1YzV5V1VhNAp6NXRqNHdjOHZyeDFSV1NFendaTm50VUJ5cUN4QnlRWWNPY2ErV243NDgwQytZemJtYTJ1Q0x1aXhUWWZQcTVNbVZSSVFSClVHYWY3WkluMDBqUkR3Q2V4clhnNk5UL2poVWdmditwbGt5MHlkQUFBQUF3RUFBUUFBQVFBWktIVHVDczJiYjNMS21jRHAKLzY2VzZTUk0rWGZuZjNCVXlRb0ViQnRsT0RpUmRhUFRLNnM5NDhIWlBCQ3FBRFV0UFVydlEvLzlURExkc1EvUS8vdmhwOApMb1kvcFlwWUlNbXJUUU9kM3l3VEFVZ09PbDhmdldweWMvRGIrY1ZxQmdaTHlZdDZnWVJaQ1hSQkdVVnlBNy90MXBKa3crCitVeXllTHNYdVRxUDRkc2xPTGgyYkJWcTVpZUFjWXdpWWVxMWh5aTN1bktSZEt4aGRMUnh6MmsybDlzYlJFQUtzSlFrNzUKNjhUZVZSYWJsRi9XQ0RFQld2K1BUUThTNm5QQlVhZEk3dHRFbVpCaXNraXlPTGx3d1ZuN3A5N3FWMFJzK0R4TkFId01ZZQpZaUZ4WGpnV0dFZmJUT2RpYXo5WjJLMVAvVytzMUhMejA0elNhbWxxbjdSQkFBQUFnUUNQdGJyU2M1MlZMQWNtRUN1MXdNCnB1bGxCQ2NZS0cxYlNRc3V4TnNnTkdpR3lEakY1M3ZULytleUQwdzdyNW53WlE1dHdqV3V6UlNweUpNa3hrcURzR2ZUMzkKMm12Wjd6WVVNRFZ5bG5LQmJiYnlCWXlVQXJXYmQzTXFSNHZOakFZakhueStMaXdNUVVmTFJPZXI1RjRBOCs5cTdTOXlzRgowckNNcnZvd3BPbHdBQUFJRUEvM0I4L2lRUlV2MHZ4MTljZ2VRSUhDK0tuUG1sKzRnbk80ZVZvektUUm5Yb0JtRk9YVjVjCldHOEEzSk9IQUhuWklIc1E5U0tXTkE2clJKWEtZVDRxSVp6ME5xNnRLNTdnQjd3VkZkQUdRZjV2bi9IVnZJV1lHOHVvcVMKR3FIaC8zK0hqRk5FRGxzRmZyN1lFYU1JRkZnTEFjdXhJVTgvWC9UNEVmYy9RV0M1RUFBQUNCQU5SckNjaUZnTVNtL3pnTQpTY1ZsZGNqQjdpb2dRSlp3bzNMcDYyS093NlRFTHpYbDRRZWhjbTUwTnpIcC9WMW5YN05zZ0YrditWRURTMGdObjZqMmZJCjRPcU9OZWprRFU3ZWF2bTlPOGFtZWVTOXJqM3NBUFl5dmg1UnNCOXJQUFNyYnp5elQ1dzdEekhwUzV0cTFTWGFQemdVLzcKOTRlZ0N4OHRLV2plcjdKTkFBQUFEbkp2YjNSQVlYQnBkbTEzWVhKbEFRSURCQT09Ci0tLS0tRU5EIE9QRU5TU0ggUFJJVkFURSBLRVktLS0tLQo=\",\n        \"comment\": \"usiamo questa\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/stage2/bootstrapkeys/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"stage2",
								"bootstrapkeys",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "finalPubKeys",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/stage2/finalpubkeys/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"stage2",
								"finalpubkeys",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "finalPubKeys",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"pub_key\": \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDKW4k+SH3wYpzRAQAYHj0+NrGtCXA/RoKKcfSvhh5jSj3BGlYY8KIhKJ16j8MWPg1mJVA5WUgl0z4jogyPNWz6wqJcNYVqt4wKJkc3w/1eG5nBHaU1S1TlkAJfKJ7JU2kpRxyGTsS2IgUGlEb7KXPzg00D2HAWeELAwxPFHz+/QM0f0FWlaOY9Dw/yR/KC1kQNu34CHjMJHYXipIeQZLmG7kHvhw2sWAbhsxCpHwoMNrCrXA2kOCiMWpjvrYwxEVuaheeTog1XPJdxR6+YIccxtSQh35Wxm2YVPgjOSoIbbf9fMOgf9uZj6b9XtOcnrFbIQFdq1GhJmPde5XyO3MWP root@apivmware\",\n        \"comment\": \"usiamo questa\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/stage2/finalpubkeys/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"stage2",
								"finalpubkeys",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "target",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/stage2/target/1/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"stage2",
								"target",
								"1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "customSpec",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"network\": [\n            {\n                \"ip\": \"192.168.18.206\",\n                \"netMask\": \"255.255.255.0\",\n                \"gw\": [\n                    \"192.168.18.1\"\n                ]\n            },\n            {\n                \"ip\": \"192.168.18.207\",\n                \"netMask\": \"255.255.255.0\"\n            }\n        ],\n        \"dns1\": \"192.168.18.20\",\n        \"dns2\": \"8.8.8.8\",\n        \"hostName\": \"robo\",\n        \"domainName\": \"robevarie.vlab.local\",\n        \"timeZone\": \"Antarctica/Troll\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{concerto_ip}}/backend/vmware/1/customSpec/centos-test/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"vmware",
								"1",
								"customSpec",
								"centos-test",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "api-checkpoint",
			"item": [
				{
					"name": "domains",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwttoken}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/checkpoint/1/domains/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"checkpoint",
								"1",
								"domains",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "networks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwttoken}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/checkpoint/1/POLAND/networks/?local",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"checkpoint",
								"1",
								"POLAND",
								"networks",
								""
							],
							"query": [
								{
									"key": "local",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "assets",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwttoken}}"
							}
						],
						"url": {
							"raw": "https://{{concerto_ip}}/backend/checkpoint/assets/",
							"protocol": "https",
							"host": [
								"{{concerto_ip}}"
							],
							"path": [
								"backend",
								"checkpoint",
								"assets",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "api-infoblox",
			"item": [
				{
					"name": "Assets",
					"item": [
						{
							"name": "assets",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/assets/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"assets",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "assets",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"fqdn\": \"192.168.22.61\",\n        \"protocol\": \"https\",\n        \"port\": 443,\n        \"path\": \"/wapi/v2.10/\",\n        \"tlsverify\": false,\n        \"datacenter\": \"Milano\",\n        \"environment\": \"Developement\",\n        \"position\": \"RACK 1\",\n        \"username\": \"admin\",\n        \"password\": \"xxxxxx\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/assets/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"assets",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "asset",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"path\": \"/\",\n        \"port\": 80,\n        \"protocol\": \"http\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/asset/2/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"asset",
										"2",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "asset",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/asset/1/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"asset",
										"1",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Permissions",
					"item": [
						{
							"name": "authorizations",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/authorizations/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"authorizations",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "permissions",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/permissions/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"permissions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "permissions",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"identity_group_name\": \"groupStaff\",\n        \"identity_group_identifier\": \"cn=groupstaff,cn=users,dc=lab,dc=local\",\n        \"role\": \"staff\",\n        \"network\": {\n            \"name\": \"10.8.128.0/17\",\n            \"id_asset\": 1\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/permissions/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"permissions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "permission",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/permission/3/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"permission",
										"3",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "permission",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"identity_group_name\": \"groupStaff\",\n        \"identity_group_identifier\": \"cn=groupstaff,cn=users,dc=lab,dc=local\",\n        \"role\": \"readonly\",\n        \"network\": {\n            \"name\": \"10.8.0.0/24\",\n            \"id_asset\": 1\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/permission/6/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"permission",
										"6",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "identity-groups",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/identity-groups/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"identity-groups",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "identity-groups",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"groupLocalNew\",\n        \"identity_group_identifier\": \"cn=groupStaff,cn=users,dc=lab,dc=localNew\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/identity-groups/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"identity-groups",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "identity-group",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/identity-group/cn=groupStaff,cn=users,dc=lab,dc=localNew/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"identity-group",
										"cn=groupStaff,cn=users,dc=lab,dc=localNew",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "identity-group",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"groupNewModified\",\n        \"identity_group_identifier\": \"cn=groupstaff,cn=users,dc=lab,dc=localNewModified\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/identity-group/cn=groupStaff,cn=users,dc=lab,dc=localNew/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"identity-group",
										"cn=groupStaff,cn=users,dc=lab,dc=localNew",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "roles",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/roles/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"roles",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "roles  (privileges)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/roles/?related=privileges",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"roles",
										""
									],
									"query": [
										{
											"key": "related",
											"value": "privileges"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Configuration",
					"item": [
						{
							"name": "configuration",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwttoken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/configuration/global/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"configuration",
										"global",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "configuration",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwttoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"configuration\": [\n            {\n                \"key\": \"key1\",\n                \"value\": \"value1\"\n            },\n            {\n                \"key\": \"key2\",\n                \"value\": \"value2\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/configuration/global/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"configuration",
										"global",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "History",
					"item": [
						{
							"name": "history",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/history/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"history",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "action history",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/action-history/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"action-history",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Triggers",
					"item": [
						{
							"name": "triggers",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/triggers/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"triggers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "trigger",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/trigger/1/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"trigger",
										"1",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "triggers",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"infoblox-ipv4s_patch\",\n        \"dst_asset_id\": 1,\n        \"action\": \"dst:ipv4s-replica\",\n        \"enabled\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/triggers/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"triggers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "trigger",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"infoblox-ipv4s_get\",\n        \"dst_asset_id\": 2,\n        \"action\": \"dst:ipv4-info\",\n        \"enabled\": 0\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/trigger/1/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"trigger",
										"1",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "trigger",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/trigger/2/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"trigger",
										"2",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "trigger conditions",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"src_asset_id\": 1,\n        \"condition\": \"src-ip-in:10.9.0.0/18\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/trigger/1/conditions/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"trigger",
										"1",
										"conditions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "trigger condition",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/trigger/1/condition/3/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"trigger",
										"1",
										"condition",
										"3",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Infoblox",
					"item": [
						{
							"name": "Use cases",
							"item": [
								{
									"name": "dismiss-cloud-networks",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{jwttoken}}"
											},
											{
												"key": "If-None-Match",
												"value": "851847cbe30d3d64e74703cac5fa8992",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"data\": {\n        \"provider\": \"AWS\",\n        \"network_data\": {\n            \"Region\": \"aws-eu-west-1\",\n            \"Account ID\": \"555555555555\",\n            \"Account Name\": \"stoca\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/dismiss-cloud-networks/",
											"protocol": "{{proto}}",
											"host": [
												"{{infoblox_ip}}"
											],
											"path": [
												"{{infoblox_path}}",
												"infoblox",
												"1",
												"dismiss-cloud-networks",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "assign-cloud-network",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{jwttoken}}"
											},
											{
												"key": "If-None-Match",
												"value": "851847cbe30d3d64e74703cac5fa8992",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"data\": {\n        \"provider\": \"AWS\",\n        \"region\": \"aws-eu-west-1\",\n        \"network_data\": {\n            \"network\": \"next-available\",\n            \"subnetMaskCidr\": 24,\n            \"comment\": \"Nella vecchia fattoria ia ia oh\",\n            \"extattrs\": {\n                \"Account ID\": {\n                    \"value\": \"555555555555\"\n                },\n                \"Account Name\": {\n                    \"value\": \"ppp\"\n                },\n                \"Reference\": {\n                    \"value\": \"qqq\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/assign-cloud-network/",
											"protocol": "{{proto}}",
											"host": [
												"{{infoblox_ip}}"
											],
											"path": [
												"{{infoblox_path}}",
												"infoblox",
												"1",
												"assign-cloud-network",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "modify-cloud-network",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{jwttoken}}"
											},
											{
												"key": "If-None-Match",
												"value": "851847cbe30d3d64e74703cac5fa8992",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"data\": {\n        \"region\": \"aws-eu-west-1\",\n        \"network_data\": {\n            \"comment\": \"Nella vecchia fattoria ia ia oooooooooooh\",\n            \"extattrs\": {\n                \"Account ID\": {\n                    \"value\": \"888888888888\"\n                },\n                \"Account Name\": {\n                    \"value\": \"stoca\"\n                },\n                \"Reference\": {\n                    \"value\": \"parolaio\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/modify-cloud-network/172.16.1.0/",
											"protocol": "{{proto}}",
											"host": [
												"{{infoblox_ip}}"
											],
											"path": [
												"{{infoblox_path}}",
												"infoblox",
												"1",
												"modify-cloud-network",
												"172.16.1.0",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "modify-cloud-network-account",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{jwttoken}}"
											},
											{
												"key": "If-None-Match",
												"value": "851847cbe30d3d64e74703cac5fa8992",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"data\": {\n        \"Account ID\": {\n            \"value\": \"555555555555\"\n        },\n        \"Account Name\": {\n            \"value\": \"ooo\"\n        },\n        \"Reference\": {\n            \"value\": \"qqq\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/modify-account-cloud-network/555555555555/",
											"protocol": "{{proto}}",
											"host": [
												"{{infoblox_ip}}"
											],
											"path": [
												"{{infoblox_path}}",
												"infoblox",
												"1",
												"modify-account-cloud-network",
												"555555555555",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "list-cloud-extattrs (providers)",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{jwttoken}}"
											},
											{
												"key": "If-None-Match",
												"value": "851847cbe30d3d64e74703cac5fa8992",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/list-cloud-extattrs/provider/",
											"protocol": "{{proto}}",
											"host": [
												"{{infoblox_ip}}"
											],
											"path": [
												"{{infoblox_path}}",
												"infoblox",
												"1",
												"list-cloud-extattrs",
												"provider",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "list-cloud-extattrs  (accounts + providers)",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{jwttoken}}"
											},
											{
												"key": "If-None-Match",
												"value": "851847cbe30d3d64e74703cac5fa8992",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/list-cloud-extattrs/account+provider/",
											"protocol": "{{proto}}",
											"host": [
												"{{infoblox_ip}}"
											],
											"path": [
												"{{infoblox_path}}",
												"infoblox",
												"1",
												"list-cloud-extattrs",
												"account+provider",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "list-cloud-extattrs  (accounts + providers) (filter)",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{jwttoken}}"
											},
											{
												"key": "If-None-Match",
												"value": "851847cbe30d3d64e74703cac5fa8992",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/list-cloud-extattrs/account+provider/?fby=*Country&fval=Cloud-AWS",
											"protocol": "{{proto}}",
											"host": [
												"{{infoblox_ip}}"
											],
											"path": [
												"{{infoblox_path}}",
												"infoblox",
												"1",
												"list-cloud-extattrs",
												"account+provider",
												""
											],
											"query": [
												{
													"key": "fby",
													"value": "*Country"
												},
												{
													"key": "fval",
													"value": "Cloud-AWS"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "delete-cloud-network",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{jwttoken}}"
											},
											{
												"key": "If-None-Match",
												"value": "851847cbe30d3d64e74703cac5fa8992",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/delete-cloud-network/172.16.2.0/",
											"protocol": "{{proto}}",
											"host": [
												"{{infoblox_ip}}"
											],
											"path": [
												"{{infoblox_path}}",
												"infoblox",
												"1",
												"delete-cloud-network",
												"172.16.2.0",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "vlan",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/vlan/12/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"vlan",
										"12",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "vlans",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/vlans/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"vlans",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "networks",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/networks/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"networks",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "networks (filters)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/networks/?fby=*Account ID&fval=555555555555&fby=*Environment&fval=Cloud",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"networks",
										""
									],
									"query": [
										{
											"key": "fby",
											"value": "*Account ID"
										},
										{
											"key": "fval",
											"value": "555555555555"
										},
										{
											"key": "fby",
											"value": "*Environment"
										},
										{
											"key": "fval",
											"value": "Cloud"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "networks",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"network\": \"192.168.21.0/24\",\n        \"comment\": \"nella vecchia fattoria\",\n        \"extattrs\": {\n            \"Gateway\": {\n                \"value\": \"192.168.21.11\"\n            },\n            \"Mask\": {\n                \"value\": \"255.255.255.0\"\n            },\n            \"Real Network\": {\n                \"value\": \"yes\"\n            }\n        },\n        \"options\": [\n            {\n                \"name\": \"host-name\",\n                \"num\": 12,\n                \"value\": \"proa\",\n                \"vendor_class\": \"DHCP\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/networks/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"networks",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "network",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/network/172.16.2.0/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"network",
										"172.16.2.0",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "network",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/network/10.9.31.0/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"network",
										"10.9.31.0",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "network",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"comment\": \"Nella vecchia fattoria ia ia oh oh oh\",\n        \"options\": [\n            {\n                \"name\": \"host-name\",\n                \"num\": 12,\n                \"value\": \"ripproa\",\n                \"vendor_class\": \"DHCP\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/network/10.9.11.0/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"network",
										"10.9.11.0",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "network (ip)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/network/10.8.1.0/?related=ip",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"network",
										"10.8.1.0",
										""
									],
									"query": [
										{
											"key": "related",
											"value": "ip"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "network (range)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/network/10.8.3.0/?related=range",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"network",
										"10.8.3.0",
										""
									],
									"query": [
										{
											"key": "related",
											"value": "range"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "network-containers",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/network-containers/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"network-containers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "network-containers (filters)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/network-containers/?fby=*Environment&fval=Cloud&fby=*Country&fval=Cloud-AWS&fby=*City&fval=aws-eu-west-1",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"network-containers",
										""
									],
									"query": [
										{
											"key": "fby",
											"value": "*Environment"
										},
										{
											"key": "fval",
											"value": "Cloud"
										},
										{
											"key": "fby",
											"value": "*Country"
										},
										{
											"key": "fval",
											"value": "Cloud-AWS"
										},
										{
											"key": "fby",
											"value": "*City"
										},
										{
											"key": "fval",
											"value": "aws-eu-west-1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "network-container-networks",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/network-container/10.8.0.0/17/networks/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"network-container",
										"10.8.0.0",
										"17",
										"networks",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "network-container-next-available-networks",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"subnet_mask_cidr\": 24,\n        \"network_data\": {\n            \"network\": \"next-available\",\n            \"comment\": \"Nella vecchia fattoria ia ia oh 1\",\n            \"vlans\": [\n                {\n                    \"vlan\": \"vlan/ZG5zLnZsYW4kLmNvbS5pbmZvYmxveC5kbnMudmxhbl92aWV3JHZ2bGFuLjExLjIwLjEx:vvlan/vvlan0011/11\"\n                }\n            ],\n            \"extattrs\": {\n                \"Real Network\": {\n                    \"value\": \"no\"\n                },\n                \"Account ID\": {\n                    \"value\": \"VannaMarchi\"\n                },\n                \"Account Name\": {\n                    \"value\": \"Vanna Marchi\"\n                }\n            },\n            \"options\": [\n                {\n                    \"name\": \"host-name\",\n                    \"num\": 12,\n                    \"value\": \"proa\",\n                    \"vendor_class\": \"DHCP\"\n                }\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/network-container/10.9.0.0/20/networks/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"network-container",
										"10.9.0.0",
										"20",
										"networks",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "ranges",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/ranges/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"ranges",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "range",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/range/10.8.1.2/10.8.1.2/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"range",
										"10.8.1.2",
										"10.8.1.2",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "tree",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/tree/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"tree",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "ipv4s",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"ipv4addr\": \"10.8.1.100\",\n        \"number\": 1,\n        \"mac\": [\n            \"00:00:00:00:00:00\"\n        ],\n        \"extattrs\": [\n            {\n                \"Name Server\": {\n                    \"value\": \"Server Direct Creation\"\n                },\n                \"Reference\": {\n                    \"value\": \"LumIT S.p.A.\"\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/ipv4s/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"ipv4s",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "ipv4s (objects)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"ipv4addr\": \"10.8.1.100\",\n        \"number\": 1,\n        \"mac\": [\n            \"00:00:00:00:00:00\"\n        ],\n        \"extattrs\": [\n            {\n                \"Name Server\": {\n                    \"value\": \"Server Direct Creation\"\n                },\n                \"Reference\": {\n                    \"value\": \"LumIT S.p.A.\"\n                }\n            }\n        ],\n        \"options\": [\n            {\n                \"name\": \"dhcp-lease-time\",\n                \"num\": 51,\n                \"use_option\": false,\n                \"value\": \"43200\",\n                \"vendor_class\": \"DHCP\"\n            },\n            {\n                \"name\": \"host-name\",\n                \"num\": 12,\n                \"value\": \"proa\",\n                \"vendor_class\": \"DHCP\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/ipv4s/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"ipv4s",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "ipv4s (next.available)(cont.)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"network\": \"192.168.100.0\",\n\n        \"number\": 2,\n        \"mac\": [\n            \"00:00:00:00:00:00\"\n        ],\n        \"extattrs\": [\n            {\n                \"Name Server\": {\n                    \"value\": \"Server\"\n                },\n                \"Reference\": {\n                    \"value\": \"LumIT S.p.A.\"\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/ipv4s/?next-available&rep=1",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"ipv4s",
										""
									],
									"query": [
										{
											"key": "next-available",
											"value": null
										},
										{
											"key": "rep",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ipv4s (next.available) with option 12",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"network\": \"10.8.0.0\",\n        \"object_type\": \"Server\",\n        \"number\": 1,\n        \"mac\": [\n            \"00:00:00:00:00:00\"\n        ],\n        \"extattrs\": [\n            {\n                \"Name Server\": {\n                    \"value\": \"Server\"\n                },\n                \"Reference\": {\n                    \"value\": \"LumIT S.p.A.\"\n                }\n            }\n        ],\n        \"options\": [\n            {\n                \"name\": \"host-name\",\n                \"num\": 12,\n                \"value\": \"proa\",\n                \"vendor_class\": \"DHCP\"\n            }\n        ]\n\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/ipv4s/?next-available",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"ipv4s",
										""
									],
									"query": [
										{
											"key": "next-available",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ipv4s (next.available in range)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"network\": \"10.8.0.0\",\n        \"object_type\": \"Server\",\n        \"range_by_reference\": \"Lo Zio Pino\",\n        \"reference_prefix\": \"ciccio\",\n        \"number\": 2,\n        \"mac\": [\n            \"00:00:00:00:00:00\"\n        ],\n        \"extattrs\": [\n            {\n                \"Name Server\": {\n                    \"value\": \"Server\"\n                },\n                \"Reference\": {\n                    \"value\": \"LumIT S.p.A.\"\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/ipv4s/?next-available",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"ipv4s",
										""
									],
									"query": [
										{
											"key": "next-available",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ipv4s (next.available)(netw.)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"network\": \"10.8.128.0\",\n        \"number\": 1,\n        \"mac\": [\n            \"00:00:00:00:00:00\"\n        ],\n        \"extattrs\": [\n            {\n                \"Name Server\": {\n                    \"value\": \"Server\"\n                },\n                \"Reference\": {\n                    \"value\": \"LumIT S.p.A.\"\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/ipv4s/?next-available",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"ipv4s",
										""
									],
									"query": [
										{
											"key": "next-available",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ipv4s (next.available)(heartbeat)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"network\": \"10.8.10.0\",\n        \"object_type\": \"Heartbeat\",\n        \"number\": 2,\n        \"mac\": [\n            \"00:00:01:01:00:01\",\n            \"00:00:01:01:00:02\"\n        ],\n        \"extattrs\": [\n            {\n                \"Name Server\": {\n                    \"value\": \"Server\"\n                },\n                \"Reference\": {\n                    \"value\": \"LumIT S.p.A. // 1\"\n                }\n            },\n            {\n                \"Name Server\": {\n                    \"value\": \"Server\"\n                },\n                \"Reference\": {\n                    \"value\": \"LumIT S.p.A. // 2\"\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/ipv4s/?next-available",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"ipv4s",
										""
									],
									"query": [
										{
											"key": "next-available",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ipv4",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/ipv4/10.8.0.41/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"ipv4",
										"10.8.0.41",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "ipv4",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/ipv4/10.8.3.35/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"ipv4",
										"10.8.3.35",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "ipv4",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"mac\": \"00:00:f0:00:11:00\",\n        \"extattrs\": {\n            \"Name Server\": {\n                \"value\": \"Server (modified)\"\n            }\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/ipv4/10.8.1.100/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"ipv4",
										"10.8.1.100",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "ipv4 (objects)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "851847cbe30d3d64e74703cac5fa8992",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"mac\": \"00:00:f0:00:11:00\",\n        \"extattrs\": {\n            \"Name Server\": {\n                \"value\": \"Server (modified)\"\n            }\n        },\n        \"options\": [\n            {\n                \"name\": \"dhcp-lease-time\",\n                \"num\": 51,\n                \"use_option\": false,\n                \"value\": \"43200\",\n                \"vendor_class\": \"DHCP\"\n            },\n            {\n                \"name\": \"host-name\",\n                \"num\": 12,\n                \"value\": \"riproa\",\n                \"vendor_class\": \"DHCP\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{infoblox_ip}}/{{infoblox_path}}/infoblox/1/ipv4/10.8.0.41/",
									"protocol": "{{proto}}",
									"host": [
										"{{infoblox_ip}}"
									],
									"path": [
										"{{infoblox_path}}",
										"infoblox",
										"1",
										"ipv4",
										"10.8.0.41",
										""
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "api-proofpoint",
			"item": [
				{
					"name": "Assets",
					"item": [
						{
							"name": "assets",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/assets/",
									"protocol": "{{proto}}",
									"host": [
										"{{proofpoint_ip}}"
									],
									"path": [
										"{{proofpoint_path}}",
										"proofpoint",
										"assets",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "assets",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"fqdn\": \"results.eu.securityeducation.com\",\n        \"name\": \"Client.1\",\n        \"protocol\": \"https\",\n        \"port\": 443,\n        \"path\": \"/api/reporting/v0.3.0/\",\n        \"tlsverify\": true,\n        \"baseurl\": \"https://results.eu.securityeducation.com/api/reporting/v0.3.0/\",\n        \"datacenter\": \"\",\n        \"environment\": \"Development\",\n        \"position\": \"Virtual\",\n        \"apitoken\": \"APITOKEN\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/assets/",
									"protocol": "{{proto}}",
									"host": [
										"{{{proofpoint_ip}}"
									],
									"path": [
										"{{proofpoint_path}}",
										"proofpoint",
										"assets",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "asset",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"tlsverify\": true\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/asset/2/",
									"protocol": "{{proto}}",
									"host": [
										"{{proofpoint_ip}}"
									],
									"path": [
										"{{proofpoint_path}}",
										"proofpoint",
										"asset",
										"2",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "asset",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/asset/2/",
									"protocol": "{{proto}}",
									"host": [
										"{{proofpoint_ip}}"
									],
									"path": [
										"{{proofpoint_path}}",
										"proofpoint",
										"asset",
										"2",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Permissions",
					"item": [
						{
							"name": "authorizations",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/authorizations/",
									"protocol": "{{proto}}",
									"host": [
										"{{proofpoint_ip}}"
									],
									"path": [
										"{{proofpoint_path}}",
										"proofpoint",
										"authorizations",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "permissions",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/permissions/",
									"protocol": "{{proto}}",
									"host": [
										"{{proofpoint_ip}}"
									],
									"path": [
										"{{proofpoint_path}}",
										"proofpoint",
										"permissions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "permissions",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"identity_group_identifier\": \"cn=groupstaff,cn=users,dc=lab,dc=local\",\n        \"role\": \"staff\",\n        \"id_asset\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/permissions/",
									"protocol": "{{proto}}",
									"host": [
										"{{proofpoint_ip}}"
									],
									"path": [
										"{{proofpoint_path}}",
										"proofpoint",
										"permissions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "permission",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"identity_group_identifier\": \"cn=groupstaff,cn=users,dc=lab,dc=local\",\n        \"role\": \"readonly\",\n        \"id_asset\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/permission/3/",
									"protocol": "{{proto}}",
									"host": [
										"{{proofpoint_ip}}"
									],
									"path": [
										"{{proofpoint_path}}",
										"proofpoint",
										"permission",
										"3",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "permission",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/permission/3/",
									"protocol": "{{proto}}",
									"host": [
										"{{proofpoint_ip}}"
									],
									"path": [
										"{{proofpoint_path}}",
										"proofpoint",
										"permission",
										"3",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "identity-groups",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/identity-groups/",
									"protocol": "{{proto}}",
									"host": [
										"{{proofpoint_ip}}"
									],
									"path": [
										"{{proofpoint_path}}",
										"proofpoint",
										"identity-groups",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "identity-groups",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"groupLocalNew\",\n        \"identity_group_identifier\": \"cn=groupStaff,cn=users,dc=lab,dc=localNew\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/identity-groups/",
									"protocol": "{{proto}}",
									"host": [
										"{{proofpoint_ip}}"
									],
									"path": [
										"{{proofpoint_path}}",
										"proofpoint",
										"identity-groups",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "identity-group",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"groupStaffModified\",\n        \"identity_group_identifier\": \"cn=groupStaff,cn=users,dc=lab,dc=localNewModified\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/identity-group/cn=groupStaff,cn=users,dc=lab,dc=localNew/",
									"protocol": "{{proto}}",
									"host": [
										"{{proofpoint_ip}}"
									],
									"path": [
										"{{proofpoint_path}}",
										"identity-group",
										"cn=groupStaff,cn=users,dc=lab,dc=localNew",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "identity-group",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/identity-group/cn=groupStaff,cn=users,dc=lab,dc=localNewModified/",
									"protocol": "{{proto}}",
									"host": [
										"{{proofpoint_ip}}"
									],
									"path": [
										"{{proofpoint_path}}",
										"proofpoint",
										"identity-group",
										"cn=groupStaff,cn=users,dc=lab,dc=localNewModified",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "roles",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/roles/",
									"protocol": "{{proto}}",
									"host": [
										"{{proofpoint_ip}}"
									],
									"path": [
										"{{proofpoint_path}}",
										"proofpoint",
										"roles",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "roles  (privileges)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/roles/?related=privileges",
									"protocol": "{{proto}}",
									"host": [
										"{{proofpoint_ip}}"
									],
									"path": [
										"{{proofpoint_path}}",
										"proofpoint",
										"roles",
										""
									],
									"query": [
										{
											"key": "related",
											"value": "privileges"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Configuration",
					"item": [
						{
							"name": "configuration",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwttoken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/configuration/global/",
									"protocol": "{{proto}}",
									"host": [
										"{{proofpoint_ip}}"
									],
									"path": [
										"{{proofpoint_path}}",
										"proofpoint",
										"configuration",
										"global",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "configuration",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwttoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"configuration\": [\n            {\n                \"key\": \"key1\",\n                \"value\": \"value1\"\n            },\n            {\n                \"key\": \"key2\",\n                \"value\": \"value2\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/configuration/global/",
									"protocol": "{{proto}}",
									"host": [
										"{{proofpoint_ip}}"
									],
									"path": [
										"{{proofpoint_path}}",
										"proofpoint",
										"configuration",
										"global",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "History",
					"item": [
						{
							"name": "history",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/history/",
									"protocol": "{{proto}}",
									"host": [
										"{{proofpoint_ip}}"
									],
									"path": [
										"{{proofpoint_path}}",
										"proofpoint",
										"history",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "action history",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/action-history/",
									"protocol": "{{proto}}",
									"host": [
										"{{proofpoint_ip}}"
									],
									"path": [
										"{{proofpoint_path}}",
										"proofpoint",
										"action-history",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Proofpoint",
					"item": [
						{
							"name": "PSAT",
							"item": [
								{
									"name": "Usecases",
									"item": [
										{
											"name": "stub",
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer {{jwttoken}}"
													}
												],
												"url": {
													"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/1/usecases/stub/",
													"protocol": "{{proto}}",
													"host": [
														"{{proofpoint_ip}}"
													],
													"path": [
														"{{proofpoint_path}}",
														"proofpoint",
														"1",
														"usecases",
														"stub",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "report 1",
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer {{jwttoken}}"
													}
												],
												"url": {
													"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/1/usecases/report-1/LumIT%20General%20Security%20Assessment/",
													"protocol": "{{proto}}",
													"host": [
														"{{proofpoint_ip}}"
													],
													"path": [
														"{{proofpoint_path}}",
														"proofpoint",
														"1",
														"usecases",
														"report-1",
														"LumIT%20General%20Security%20Assessment",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "users",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{jwttoken}}"
											}
										],
										"url": {
											"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/1/users/",
											"protocol": "{{proto}}",
											"host": [
												"{{proofpoint_ip}}"
											],
											"path": [
												"{{proofpoint_path}}",
												"proofpoint",
												"1",
												"users",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "knowledge-assesments",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{jwttoken}}"
											}
										],
										"url": {
											"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/1/knowledge-assesments/",
											"protocol": "{{proto}}",
											"host": [
												"{{proofpoint_ip}}"
											],
											"path": [
												"{{proofpoint_path}}",
												"proofpoint",
												"1",
												"knowledge-assesments",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "knowledge-assesments (filter)",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{jwttoken}}"
											}
										],
										"url": {
											"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/1/knowledge-assesments//?filter[_assignmentname]=[LumIT General Security Assessment]",
											"protocol": "{{proto}}",
											"host": [
												"{{proofpoint_ip}}"
											],
											"path": [
												"{{proofpoint_path}}",
												"proofpoint",
												"1",
												"knowledge-assesments",
												"",
												""
											],
											"query": [
												{
													"key": "filter[_assignmentname]",
													"value": "[LumIT General Security Assessment]"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "phish-alarms",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{jwttoken}}"
											}
										],
										"url": {
											"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/1/phish-alarms/",
											"protocol": "{{proto}}",
											"host": [
												"{{proofpoint_ip}}"
											],
											"path": [
												"{{proofpoint_path}}",
												"proofpoint",
												"1",
												"phish-alarms",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "phishings",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{jwttoken}}"
											}
										],
										"url": {
											"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/1/phishings/",
											"protocol": "{{proto}}",
											"host": [
												"{{proofpoint_ip}}"
											],
											"path": [
												"{{proofpoint_path}}",
												"proofpoint",
												"1",
												"phishings",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "phishings (extended)",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{jwttoken}}"
											}
										],
										"url": {
											"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/1/phishings/?extended=true",
											"protocol": "{{proto}}",
											"host": [
												"{{proofpoint_ip}}"
											],
											"path": [
												"{{proofpoint_path}}",
												"proofpoint",
												"1",
												"phishings",
												""
											],
											"query": [
												{
													"key": "extended",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "trainings",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{jwttoken}}"
											}
										],
										"url": {
											"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/1/trainings/",
											"protocol": "{{proto}}",
											"host": [
												"{{proofpoint_ip}}"
											],
											"path": [
												"{{proofpoint_path}}",
												"proofpoint",
												"1",
												"trainings",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "training-enrollments",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{jwttoken}}"
											}
										],
										"url": {
											"raw": "{{proto}}://{{proofpoint_ip}}/{{proofpoint_path}}/proofpoint/1/training-enrollments/",
											"protocol": "{{proto}}",
											"host": [
												"{{proofpoint_ip}}"
											],
											"path": [
												"{{proofpoint_path}}",
												"proofpoint",
												"1",
												"training-enrollments",
												""
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "api-zscaler",
			"item": [
				{
					"name": "Assets",
					"item": [
						{
							"name": "assets",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/assets/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"assets",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "assets",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"fqdn\": \"zsapi.zscloud.net\",\n        \"protocol\": \"https\",\n        \"port\": 443,\n        \"path\": \"/api/v1/\",\n        \"tlsverify\": true,\n        \"baseurl\": \"https://zsapi.zscloud.net:443/api/v1/\",\n        \"admin_fqdn\": \"admin.zscloud.net\",\n        \"admin_protocol\": \"https\",\n        \"admin_port\": 443,\n        \"admin_path\": \"/api/v1/\",\n        \"admin_tlsverify\": true,\n        \"admin_baseurl\": \"https://admin.zscloud.net:443/zsapi/v1/\",\n        \"datacenter\": \"\",\n        \"environment\": \"Development\",\n        \"position\": \"Virtual\",\n        \"username\": \"xxxxxxxxxxxx\",\n        \"password\": \"xxxxxxxxx\",\n        \"apikey\": \"key\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/assets/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"assets",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "asset",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"baseurl\": \"https://zsapi.zscloud.net/api/v2/\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/asset/2/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"asset",
										"2",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "asset",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/asset/2/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"asset",
										"2",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Permissions",
					"item": [
						{
							"name": "authorizations",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/authorizations/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"authorizations",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "permissions",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/permissions/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"permissions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "permissions",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"identity_group_identifier\": \"cn=groupstaff,cn=users,dc=lab,dc=local\",\n        \"role\": \"staff\",\n        \"id_asset\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/permissions/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"permissions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "permission",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"identity_group_identifier\": \"cn=groupstaff,cn=users,dc=lab,dc=local\",\n        \"role\": \"readonly\",\n        \"id_asset\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/permission/3/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"permission",
										"3",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "permission",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/permission/3/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"permission",
										"3",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "identity-groups",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/identity-groups/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"identity-groups",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "identity-groups",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"groupLocalNew\",\n        \"identity_group_identifier\": \"cn=groupStaff,cn=users,dc=lab,dc=localNew\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/identity-groups/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"identity-groups",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "identity-group",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"groupStaffModified\",\n        \"identity_group_identifier\": \"cn=groupStaff,cn=users,dc=lab,dc=localNewModified\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/identity-group/cn=groupStaff,cn=users,dc=lab,dc=localNew/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"identity-group",
										"cn=groupStaff,cn=users,dc=lab,dc=localNew",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "identity-group",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/identity-group/cn=groupStaff,cn=users,dc=lab,dc=localNewModified/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"identity-group",
										"cn=groupStaff,cn=users,dc=lab,dc=localNewModified",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "roles",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/roles/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"roles",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "roles  (privileges)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									},
									{
										"key": "If-None-Match",
										"value": "c485212f298abe5f8b867ca42617292a",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/roles/?related=privileges",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"roles",
										""
									],
									"query": [
										{
											"key": "related",
											"value": "privileges"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Configuration",
					"item": [
						{
							"name": "configuration",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwttoken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/configuration/global/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"configuration",
										"global",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "configuration",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwttoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"configuration\": [\n            {\n                \"key\": \"key1\",\n                \"value\": \"value1\"\n            },\n            {\n                \"key\": \"key2\",\n                \"value\": \"value2\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/configuration/global/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"configuration",
										"global",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "History",
					"item": [
						{
							"name": "history",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/history/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"history",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "action history",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/action-history/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"action-history",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Zscaler",
					"item": [
						{
							"name": "Use cases",
							"item": [
								{
									"name": "Categories report",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{jwttoken}}"
											}
										],
										"url": {
											"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/1/categories-report/",
											"protocol": "{{proto}}",
											"host": [
												"{{zscaler_ip}}"
											],
											"path": [
												"{{zscaler_path}}",
												"zscaler",
												"1",
												"categories-report",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Categories assessment",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{jwttoken}}"
											}
										],
										"url": {
											"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/2/categories-assessment/",
											"protocol": "{{proto}}",
											"host": [
												"{{zscaler_ip}}"
											],
											"path": [
												"{{zscaler_path}}",
												"zscaler",
												"2",
												"categories-assessment",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Lookup custom category urls",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{jwttoken}}"
											}
										],
										"url": {
											"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/2/categories-lookup-urls/",
											"protocol": "{{proto}}",
											"host": [
												"{{zscaler_ip}}"
											],
											"path": [
												"{{zscaler_path}}",
												"zscaler",
												"2",
												"categories-lookup-urls",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "locations",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/1/locations/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"1",
										"locations",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "locations",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"locazzzione\",\n        \"ipAddresses\": [\n            \"93.44.207.83\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/1/locations/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"1",
										"locations",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "URL category",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/1/url-category/WEB_CONFERENCING/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"1",
										"url-category",
										"WEB_CONFERENCING",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "URL categories",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/1/url-categories/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"1",
										"url-categories",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "URL categories (full)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/1/url-categories/?full",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"1",
										"url-categories",
										""
									],
									"query": [
										{
											"key": "full",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "policies firewall",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/1/policies-firewall/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"1",
										"policies-firewall",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "admin audit log",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/1/admin-audit-log/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"1",
										"admin-audit-log",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "URL filtering rule",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/1/url-filtering-rule/204934/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"1",
										"url-filtering-rule",
										"204934",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "URL filtering rules",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/1/url-filtering-rules/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"1",
										"url-filtering-rules",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "file type rules",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/1/file-type-rules/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"1",
										"file-type-rules",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "SSL inspection rules",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/1/ssl-inspection-rules/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"1",
										"ssl-inspection-rules",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "audit SSL inspection",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwttoken}}"
									}
								],
								"url": {
									"raw": "{{proto}}://{{zscaler_ip}}/{{zscaler_path}}/zscaler/1/audit/ssl-inspection/",
									"protocol": "{{proto}}",
									"host": [
										"{{zscaler_ip}}"
									],
									"path": [
										"{{zscaler_path}}",
										"zscaler",
										"1",
										"audit",
										"ssl-inspection",
										""
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}